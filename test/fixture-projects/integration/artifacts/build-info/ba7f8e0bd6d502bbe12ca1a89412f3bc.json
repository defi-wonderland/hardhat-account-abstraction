{
  "id": "ba7f8e0bd6d502bbe12ca1a89412f3bc",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.19",
  "solcLongVersion": "0.8.19+commit.7dd6d404",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/NonOwnableContract.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract NonOwnableContract {\n    uint256 public returns100;\n\n    constructor() {\n        returns100 = 100;\n    }\n}\n"
      },
      "contracts/OwnableContract.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract OwnmableContract {\n    event OwnerChanged(address);\n\n    address public owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function transferOwnership(address newOwner) external {\n        require(msg.sender == owner, \"Only owner can transfer ownership\");\n        owner = newOwner;\n\n        emit OwnerChanged(newOwner);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": { "enabled": false, "runs": 200 },
      "outputSelection": {
        "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"], "": ["ast"] }
      }
    }
  },
  "output": {
    "sources": {
      "contracts/NonOwnableContract.sol": {
        "ast": {
          "absolutePath": "contracts/NonOwnableContract.sol",
          "exportedSymbols": { "NonOwnableContract": [12] },
          "id": 13,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            { "id": 1, "literals": ["solidity", "^", "0.8", ".9"], "nodeType": "PragmaDirective", "src": "39:23:0" },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "NonOwnableContract",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 12,
              "linearizedBaseContracts": [12],
              "name": "NonOwnableContract",
              "nameLocation": "149:18:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "3fba8596",
                  "id": 3,
                  "mutability": "mutable",
                  "name": "returns100",
                  "nameLocation": "189:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "174:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 2,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "174:7:0",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 10,
                    "nodeType": "Block",
                    "src": "220:33:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 8,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6,
                            "name": "returns100",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "230:10:0",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "313030",
                            "id": 7,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "243:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "230:16:0",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "id": 9,
                        "nodeType": "ExpressionStatement",
                        "src": "230:16:0"
                      }
                    ]
                  },
                  "id": 11,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": { "id": 4, "nodeType": "ParameterList", "parameters": [], "src": "217:2:0" },
                  "returnParameters": { "id": 5, "nodeType": "ParameterList", "parameters": [], "src": "220:0:0" },
                  "scope": 12,
                  "src": "206:47:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 13,
              "src": "140:115:0",
              "usedErrors": []
            }
          ],
          "src": "39:217:0"
        },
        "id": 0
      },
      "contracts/OwnableContract.sol": {
        "ast": {
          "absolutePath": "contracts/OwnableContract.sol",
          "exportedSymbols": { "OwnmableContract": [52] },
          "id": 53,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            { "id": 14, "literals": ["solidity", "^", "0.8", ".9"], "nodeType": "PragmaDirective", "src": "39:23:1" },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "OwnmableContract",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 52,
              "linearizedBaseContracts": [52],
              "name": "OwnmableContract",
              "nameLocation": "149:16:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "a2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf36",
                  "id": 18,
                  "name": "OwnerChanged",
                  "nameLocation": "178:12:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "191:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "191:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "190:9:1"
                  },
                  "src": "172:28:1"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 20,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "221:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "206:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 28,
                    "nodeType": "Block",
                    "src": "247:35:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 23,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "257:5:1",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 24,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "265:3:1",
                              "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                            },
                            "id": 25,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "269:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "265:10:1",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "257:18:1",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 27,
                        "nodeType": "ExpressionStatement",
                        "src": "257:18:1"
                      }
                    ]
                  },
                  "id": 29,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": { "id": 21, "nodeType": "ParameterList", "parameters": [], "src": "244:2:1" },
                  "returnParameters": { "id": 22, "nodeType": "ParameterList", "parameters": [], "src": "247:0:1" },
                  "scope": 52,
                  "src": "233:49:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 50,
                    "nodeType": "Block",
                    "src": "342:146:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                              "id": 38,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 35,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "360:3:1",
                                  "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                                },
                                "id": 36,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "364:6:1",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "360:10:1",
                                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 37,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "374:5:1",
                                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                              },
                              "src": "360:19:1",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "hexValue": "4f6e6c79206f776e65722063616e207472616e73666572206f776e657273686970",
                              "id": 39,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "381:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37",
                                "typeString": "literal_string \"Only owner can transfer ownership\""
                              },
                              "value": "Only owner can transfer ownership"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37",
                                "typeString": "literal_string \"Only owner can transfer ownership\""
                              }
                            ],
                            "id": 34,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "352:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "352:65:1",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 41,
                        "nodeType": "ExpressionStatement",
                        "src": "352:65:1"
                      },
                      {
                        "expression": {
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 42,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "427:5:1",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 43,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "435:8:1",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "427:16:1",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 45,
                        "nodeType": "ExpressionStatement",
                        "src": "427:16:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 47,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "472:8:1",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                            "id": 46,
                            "name": "OwnerChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "459:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "459:22:1",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 49,
                        "nodeType": "EmitStatement",
                        "src": "454:27:1"
                      }
                    ]
                  },
                  "functionSelector": "f2fde38b",
                  "id": 51,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferOwnership",
                  "nameLocation": "297:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 32,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 31,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "323:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 51,
                        "src": "315:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 30,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "315:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "314:18:1"
                  },
                  "returnParameters": { "id": 33, "nodeType": "ParameterList", "parameters": [], "src": "342:0:1" },
                  "scope": 52,
                  "src": "288:200:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 53,
              "src": "140:350:1",
              "usedErrors": []
            }
          ],
          "src": "39:452:1"
        },
        "id": 1
      }
    },
    "contracts": {
      "contracts/NonOwnableContract.sol": {
        "NonOwnableContract": {
          "abi": [
            { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
            {
              "inputs": [],
              "name": "returns100",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": { "@_11": { "entryPoint": null, "id": 11, "parameterSlots": 0, "returnSlots": 0 } },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50606460008190555060b3806100276000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fba859614602d575b600080fd5b60336047565b604051603e91906064565b60405180910390f35b60005481565b6000819050919050565b605e81604d565b82525050565b6000602082019050607760008301846057565b9291505056fea2646970667358221220ba5f79185c3dbbb6d296febc4607a81397838eb485d3690920c781ce96e379c464736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x64 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0xB3 DUP1 PUSH2 0x27 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FBA8596 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5E DUP2 PUSH1 0x4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x77 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0x5F PUSH26 0x185C3DBBB6D296FEBC4607A81397838EB485D3690920C781CE96 0xE3 PUSH26 0xC464736F6C634300081300330000000000000000000000000000 ",
              "sourceMap": "140:115:0:-:0;;;206:47;;;;;;;;;;243:3;230:10;:16;;;;140:115;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@returns100_3": { "entryPoint": 71, "id": 3, "parameterSlots": 0, "returnSlots": 0 },
                "abi_encode_t_uint256_to_t_uint256_fromStack": {
                  "entryPoint": 87,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": 100,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": { "entryPoint": 77, "id": null, "parameterSlots": 1, "returnSlots": 1 }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:439:2",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52:32:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "62:16:2",
                              "value": { "name": "value", "nodeType": "YulIdentifier", "src": "73:5:2" },
                              "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "62:7:2" }]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "34:5:2", "type": "" }],
                        "returnVariables": [
                          { "name": "cleaned", "nodeType": "YulTypedName", "src": "44:7:2", "type": "" }
                        ],
                        "src": "7:77:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "155:53:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  { "name": "pos", "nodeType": "YulIdentifier", "src": "172:3:2" },
                                  {
                                    "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "195:5:2" }],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "177:17:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "177:24:2"
                                  }
                                ],
                                "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "165:6:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "165:37:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "165:37:2"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "value", "nodeType": "YulTypedName", "src": "143:5:2", "type": "" },
                          { "name": "pos", "nodeType": "YulTypedName", "src": "150:3:2", "type": "" }
                        ],
                        "src": "90:118:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "312:124:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "322:26:2",
                              "value": {
                                "arguments": [
                                  { "name": "headStart", "nodeType": "YulIdentifier", "src": "334:9:2" },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "345:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "330:3:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "330:18:2"
                              },
                              "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "322:4:2" }]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  { "name": "value0", "nodeType": "YulIdentifier", "src": "402:6:2" },
                                  {
                                    "arguments": [
                                      { "name": "headStart", "nodeType": "YulIdentifier", "src": "415:9:2" },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "426:1:2",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "411:3:2" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "411:17:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "358:43:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "358:71:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "358:71:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "headStart", "nodeType": "YulTypedName", "src": "284:9:2", "type": "" },
                          { "name": "value0", "nodeType": "YulTypedName", "src": "296:6:2", "type": "" }
                        ],
                        "returnVariables": [
                          { "name": "tail", "nodeType": "YulTypedName", "src": "307:4:2", "type": "" }
                        ],
                        "src": "214:222:2"
                      }
                    ]
                  },
                  "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80633fba859614602d575b600080fd5b60336047565b604051603e91906064565b60405180910390f35b60005481565b6000819050919050565b605e81604d565b82525050565b6000602082019050607760008301846057565b9291505056fea2646970667358221220ba5f79185c3dbbb6d296febc4607a81397838eb485d3690920c781ce96e379c464736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FBA8596 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5E DUP2 PUSH1 0x4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x77 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0x5F PUSH26 0x185C3DBBB6D296FEBC4607A81397838EB485D3690920C781CE96 0xE3 PUSH26 0xC464736F6C634300081300330000000000000000000000000000 ",
              "sourceMap": "140:115:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;174:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
            },
            "methodIdentifiers": { "returns100()": "3fba8596" }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"returns100\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NonOwnableContract.sol\":\"NonOwnableContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NonOwnableContract.sol\":{\"keccak256\":\"0xae36339b79984eaf99c59a8fc0aee7421fc38d45035a86f81a4caa678816c5e8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b274f0f65db948b5eb9781ded1dcb9570fca582be09770be1df47a2a1200b7e5\",\"dweb:/ipfs/QmbbKGR6umNHWd48skttzUhJ3t7iwAGj9fk7XsDr6QJCQJ\"]}},\"version\":1}"
        }
      },
      "contracts/OwnableContract.sol": {
        "OwnmableContract": {
          "abi": [
            { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
            {
              "anonymous": false,
              "inputs": [{ "indexed": false, "internalType": "address", "name": "", "type": "address" }],
              "name": "OwnerChanged",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": { "@_29": { "entryPoint": null, "id": 29, "parameterSlots": 0, "returnSlots": 0 } },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610334806100606000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b610043610075565b60405161005091906101e2565b60405180910390f35b610073600480360381019061006e919061022e565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e906102de565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf368160405161019691906101e2565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101cc826101a1565b9050919050565b6101dc816101c1565b82525050565b60006020820190506101f760008301846101d3565b92915050565b600080fd5b61020b816101c1565b811461021657600080fd5b50565b60008135905061022881610202565b92915050565b600060208284031215610244576102436101fd565b5b600061025284828501610219565b91505092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e207472616e73666572206f776e657273686960008201527f7000000000000000000000000000000000000000000000000000000000000000602082015250565b60006102c860218361025b565b91506102d38261026c565b604082019050919050565b600060208201905081810360008301526102f7816102bb565b905091905056fea2646970667358221220d1d14226466152b9c978319b89b989403a379259babd971bacad3224379f14ed64736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x334 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP1 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA2EA9883A321A3E97B8266C2B078BFEEC6D50C711ED71F874A90D500AE2EAF36 DUP2 PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC DUP3 PUSH2 0x1A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC DUP2 PUSH2 0x1C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20B DUP2 PUSH2 0x1C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228 DUP2 PUSH2 0x202 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244 JUMPI PUSH2 0x243 PUSH2 0x1FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x252 DUP5 DUP3 DUP6 ADD PUSH2 0x219 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E207472616E73666572206F776E6572736869 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8 PUSH1 0x21 DUP4 PUSH2 0x25B JUMP JUMPDEST SWAP2 POP PUSH2 0x2D3 DUP3 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F7 DUP2 PUSH2 0x2BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xD1 TIMESTAMP 0x26 CHAINID PUSH2 0x52B9 0xC9 PUSH25 0x319B89B989403A379259BABD971BACAD3224379F14ED64736F PUSH13 0x63430008130033000000000000 ",
              "sourceMap": "140:350:1:-:0;;;233:49;;;;;;;;;;265:10;257:5;;:18;;;;;;;;;;;;;;;;;;140:350;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@owner_20": { "entryPoint": 117, "id": 20, "parameterSlots": 0, "returnSlots": 0 },
                "@transferOwnership_51": { "entryPoint": 153, "id": 51, "parameterSlots": 1, "returnSlots": 0 },
                "abi_decode_t_address": { "entryPoint": 537, "id": null, "parameterSlots": 2, "returnSlots": 1 },
                "abi_decode_tuple_t_address": { "entryPoint": 558, "id": null, "parameterSlots": 2, "returnSlots": 1 },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 467,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 699,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 482,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 734,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": { "entryPoint": null, "id": null, "parameterSlots": 0, "returnSlots": 1 },
                "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                  "entryPoint": 603,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_address": { "entryPoint": 449, "id": null, "parameterSlots": 1, "returnSlots": 1 },
                "cleanup_t_uint160": { "entryPoint": 417, "id": null, "parameterSlots": 1, "returnSlots": 1 },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 509,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "store_literal_in_memory_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37": {
                  "entryPoint": 620,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_address": { "entryPoint": 514, "id": null, "parameterSlots": 1, "returnSlots": 0 }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2723:2",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52:81:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "62:65:2",
                              "value": {
                                "arguments": [
                                  { "name": "value", "nodeType": "YulIdentifier", "src": "77:5:2" },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "84:42:2",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "73:3:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "73:54:2"
                              },
                              "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "62:7:2" }]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "34:5:2", "type": "" }],
                        "returnVariables": [
                          { "name": "cleaned", "nodeType": "YulTypedName", "src": "44:7:2", "type": "" }
                        ],
                        "src": "7:126:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "184:51:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "194:35:2",
                              "value": {
                                "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "223:5:2" }],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "205:17:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "205:24:2"
                              },
                              "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "194:7:2" }]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "166:5:2", "type": "" }],
                        "returnVariables": [
                          { "name": "cleaned", "nodeType": "YulTypedName", "src": "176:7:2", "type": "" }
                        ],
                        "src": "139:96:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "306:53:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  { "name": "pos", "nodeType": "YulIdentifier", "src": "323:3:2" },
                                  {
                                    "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "346:5:2" }],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:17:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:24:2"
                                  }
                                ],
                                "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "316:6:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "316:37:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "316:37:2"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "value", "nodeType": "YulTypedName", "src": "294:5:2", "type": "" },
                          { "name": "pos", "nodeType": "YulTypedName", "src": "301:3:2", "type": "" }
                        ],
                        "src": "241:118:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "463:124:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "473:26:2",
                              "value": {
                                "arguments": [
                                  { "name": "headStart", "nodeType": "YulIdentifier", "src": "485:9:2" },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "496:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "481:3:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "481:18:2"
                              },
                              "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "473:4:2" }]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  { "name": "value0", "nodeType": "YulIdentifier", "src": "553:6:2" },
                                  {
                                    "arguments": [
                                      { "name": "headStart", "nodeType": "YulIdentifier", "src": "566:9:2" },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "577:1:2",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "562:3:2" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "562:17:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "509:43:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "509:71:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "509:71:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "headStart", "nodeType": "YulTypedName", "src": "435:9:2", "type": "" },
                          { "name": "value0", "nodeType": "YulTypedName", "src": "447:6:2", "type": "" }
                        ],
                        "returnVariables": [
                          { "name": "tail", "nodeType": "YulTypedName", "src": "458:4:2", "type": "" }
                        ],
                        "src": "365:222:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "633:35:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "643:19:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "659:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "653:5:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "653:9:2"
                              },
                              "variableNames": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "643:6:2" }]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          { "name": "memPtr", "nodeType": "YulTypedName", "src": "626:6:2", "type": "" }
                        ],
                        "src": "593:75:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "763:28:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "780:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "783:1:2",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "773:6:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "773:12:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "773:12:2"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "674:117:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "886:28:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "903:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "906:1:2",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "896:6:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "896:12:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "896:12:2"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "797:117:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "963:79:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1020:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1029:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1032:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1022:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1022:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1022:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      { "name": "value", "nodeType": "YulIdentifier", "src": "986:5:2" },
                                      {
                                        "arguments": [
                                          { "name": "value", "nodeType": "YulIdentifier", "src": "1011:5:2" }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "993:17:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "993:24:2"
                                      }
                                    ],
                                    "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "983:2:2" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "983:35:2"
                                  }
                                ],
                                "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "976:6:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "976:43:2"
                              },
                              "nodeType": "YulIf",
                              "src": "973:63:2"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "956:5:2", "type": "" }],
                        "src": "920:122:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1100:87:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1110:29:2",
                              "value": {
                                "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "1132:6:2" }],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1119:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1119:20:2"
                              },
                              "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1110:5:2" }]
                            },
                            {
                              "expression": {
                                "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1175:5:2" }],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1148:26:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1148:33:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1148:33:2"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "offset", "nodeType": "YulTypedName", "src": "1078:6:2", "type": "" },
                          { "name": "end", "nodeType": "YulTypedName", "src": "1086:3:2", "type": "" }
                        ],
                        "returnVariables": [
                          { "name": "value", "nodeType": "YulTypedName", "src": "1094:5:2", "type": "" }
                        ],
                        "src": "1048:139:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1259:263:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1305:83:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1307:77:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1307:79:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1307:79:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "1280:7:2" },
                                      { "name": "headStart", "nodeType": "YulIdentifier", "src": "1289:9:2" }
                                    ],
                                    "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "1276:3:2" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1276:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1301:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "1272:3:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "1272:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1269:119:2"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1398:117:2",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1413:15:2",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1427:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    { "name": "offset", "nodeType": "YulTypedName", "src": "1417:6:2", "type": "" }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1442:63:2",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          { "name": "headStart", "nodeType": "YulIdentifier", "src": "1477:9:2" },
                                          { "name": "offset", "nodeType": "YulIdentifier", "src": "1488:6:2" }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1473:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1473:22:2"
                                      },
                                      { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "1497:7:2" }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1452:20:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1452:53:2"
                                  },
                                  "variableNames": [
                                    { "name": "value0", "nodeType": "YulIdentifier", "src": "1442:6:2" }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "headStart", "nodeType": "YulTypedName", "src": "1229:9:2", "type": "" },
                          { "name": "dataEnd", "nodeType": "YulTypedName", "src": "1240:7:2", "type": "" }
                        ],
                        "returnVariables": [
                          { "name": "value0", "nodeType": "YulTypedName", "src": "1252:6:2", "type": "" }
                        ],
                        "src": "1193:329:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1624:73:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  { "name": "pos", "nodeType": "YulIdentifier", "src": "1641:3:2" },
                                  { "name": "length", "nodeType": "YulIdentifier", "src": "1646:6:2" }
                                ],
                                "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1634:6:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "1634:19:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1634:19:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1662:29:2",
                              "value": {
                                "arguments": [
                                  { "name": "pos", "nodeType": "YulIdentifier", "src": "1681:3:2" },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1686:4:2",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1677:3:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "1677:14:2"
                              },
                              "variableNames": [
                                { "name": "updated_pos", "nodeType": "YulIdentifier", "src": "1662:11:2" }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "pos", "nodeType": "YulTypedName", "src": "1596:3:2", "type": "" },
                          { "name": "length", "nodeType": "YulTypedName", "src": "1601:6:2", "type": "" }
                        ],
                        "returnVariables": [
                          { "name": "updated_pos", "nodeType": "YulTypedName", "src": "1612:11:2", "type": "" }
                        ],
                        "src": "1528:169:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1809:114:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      { "name": "memPtr", "nodeType": "YulIdentifier", "src": "1831:6:2" },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1839:1:2",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1827:3:2" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1827:14:2"
                                  },
                                  {
                                    "hexValue": "4f6e6c79206f776e65722063616e207472616e73666572206f776e6572736869",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1843:34:2",
                                    "type": "",
                                    "value": "Only owner can transfer ownershi"
                                  }
                                ],
                                "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1820:6:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "1820:58:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1820:58:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      { "name": "memPtr", "nodeType": "YulIdentifier", "src": "1899:6:2" },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1907:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1895:3:2" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1895:15:2"
                                  },
                                  {
                                    "hexValue": "70",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1912:3:2",
                                    "type": "",
                                    "value": "p"
                                  }
                                ],
                                "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1888:6:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "1888:28:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1888:28:2"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "1801:6:2", "type": "" }],
                        "src": "1703:220:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2075:220:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2085:74:2",
                              "value": {
                                "arguments": [
                                  { "name": "pos", "nodeType": "YulIdentifier", "src": "2151:3:2" },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2156:2:2",
                                    "type": "",
                                    "value": "33"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2092:58:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2092:67:2"
                              },
                              "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2085:3:2" }]
                            },
                            {
                              "expression": {
                                "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2257:3:2" }],
                                "functionName": {
                                  "name": "store_literal_in_memory_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37",
                                  "nodeType": "YulIdentifier",
                                  "src": "2168:88:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2168:93:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2168:93:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2270:19:2",
                              "value": {
                                "arguments": [
                                  { "name": "pos", "nodeType": "YulIdentifier", "src": "2281:3:2" },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2286:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2277:3:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "2277:12:2"
                              },
                              "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "2270:3:2" }]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "2063:3:2", "type": "" }],
                        "returnVariables": [
                          { "name": "end", "nodeType": "YulTypedName", "src": "2071:3:2", "type": "" }
                        ],
                        "src": "1929:366:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2472:248:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2482:26:2",
                              "value": {
                                "arguments": [
                                  { "name": "headStart", "nodeType": "YulIdentifier", "src": "2494:9:2" },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2505:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2490:3:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "2490:18:2"
                              },
                              "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "2482:4:2" }]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      { "name": "headStart", "nodeType": "YulIdentifier", "src": "2529:9:2" },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2540:1:2",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2525:3:2" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2525:17:2"
                                  },
                                  {
                                    "arguments": [
                                      { "name": "tail", "nodeType": "YulIdentifier", "src": "2548:4:2" },
                                      { "name": "headStart", "nodeType": "YulIdentifier", "src": "2554:9:2" }
                                    ],
                                    "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "2544:3:2" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2544:20:2"
                                  }
                                ],
                                "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "2518:6:2" },
                                "nodeType": "YulFunctionCall",
                                "src": "2518:47:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2518:47:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2574:139:2",
                              "value": {
                                "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "2708:4:2" }],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2582:124:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2582:131:2"
                              },
                              "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "2574:4:2" }]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "headStart", "nodeType": "YulTypedName", "src": "2452:9:2", "type": "" }
                        ],
                        "returnVariables": [
                          { "name": "tail", "nodeType": "YulTypedName", "src": "2467:4:2", "type": "" }
                        ],
                        "src": "2301:419:2"
                      }
                    ]
                  },
                  "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can transfer ownershi\")\n\n        mstore(add(memPtr, 32), \"p\")\n\n    }\n\n    function abi_encode_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b610043610075565b60405161005091906101e2565b60405180910390f35b610073600480360381019061006e919061022e565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e906102de565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf368160405161019691906101e2565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101cc826101a1565b9050919050565b6101dc816101c1565b82525050565b60006020820190506101f760008301846101d3565b92915050565b600080fd5b61020b816101c1565b811461021657600080fd5b50565b60008135905061022881610202565b92915050565b600060208284031215610244576102436101fd565b5b600061025284828501610219565b91505092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e207472616e73666572206f776e657273686960008201527f7000000000000000000000000000000000000000000000000000000000000000602082015250565b60006102c860218361025b565b91506102d38261026c565b604082019050919050565b600060208201905081810360008301526102f7816102bb565b905091905056fea2646970667358221220d1d14226466152b9c978319b89b989403a379259babd971bacad3224379f14ed64736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP1 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA2EA9883A321A3E97B8266C2B078BFEEC6D50C711ED71F874A90D500AE2EAF36 DUP2 PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC DUP3 PUSH2 0x1A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC DUP2 PUSH2 0x1C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20B DUP2 PUSH2 0x1C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228 DUP2 PUSH2 0x202 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244 JUMPI PUSH2 0x243 PUSH2 0x1FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x252 DUP5 DUP3 DUP6 ADD PUSH2 0x219 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E207472616E73666572206F776E6572736869 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8 PUSH1 0x21 DUP4 PUSH2 0x25B JUMP JUMPDEST SWAP2 POP PUSH2 0x2D3 DUP3 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F7 DUP2 PUSH2 0x2BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xD1 TIMESTAMP 0x26 CHAINID PUSH2 0x52B9 0xC9 PUSH25 0x319B89B989403A379259BABD971BACAD3224379F14ED64736F PUSH13 0x63430008130033000000000000 ",
              "sourceMap": "140:350:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;206:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;288:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;206:20;;;;;;;;;;;;:::o;288:200::-;374:5;;;;;;;;;;360:19;;:10;:19;;;352:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;435:8;427:5;;:16;;;;;;;;;;;;;;;;;;459:22;472:8;459:22;;;;;;:::i;:::-;;;;;;;;288:200;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:220::-;1843:34;1839:1;1831:6;1827:14;1820:58;1912:3;1907:2;1899:6;1895:15;1888:28;1703:220;:::o;1929:366::-;2071:3;2092:67;2156:2;2151:3;2092:67;:::i;:::-;2085:74;;2168:93;2257:3;2168:93;:::i;:::-;2286:2;2281:3;2277:12;2270:19;;1929:366;;;:::o;2301:419::-;2467:4;2505:2;2494:9;2490:18;2482:26;;2554:9;2548:4;2544:20;2540:1;2529:9;2525:17;2518:47;2582:131;2708:4;2582:131;:::i;:::-;2574:139;;2301:419;;;:::o"
            },
            "methodIdentifiers": { "owner()": "8da5cb5b", "transferOwnership(address)": "f2fde38b" }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OwnableContract.sol\":\"OwnmableContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OwnableContract.sol\":{\"keccak256\":\"0xbee3397a54802fbddc86bf6b450b16b6c1be2c126bd626afb4876bdf4d5060a5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://38e5966f74f3ed4104c9f1d1e43245908fa4aa70a3ec5cd760c85171e74829ba\",\"dweb:/ipfs/Qmcdw7SLcTujyzBBEMLFdK3zYtpfHqhN5XKFamYrAMw69X\"]}},\"version\":1}"
        }
      }
    }
  }
}
