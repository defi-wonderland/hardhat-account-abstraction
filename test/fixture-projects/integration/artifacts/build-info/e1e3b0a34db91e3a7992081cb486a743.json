{
  "id": "e1e3b0a34db91e3a7992081cb486a743",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.19",
  "solcLongVersion": "0.8.19+commit.7dd6d404",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/OwnableContract.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract OwnableContract {\n    event OwnerChanged(address);\n\n    address public owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function transferOwnership(address newOwner) external {\n        require(msg.sender == owner, \"Only owner can transfer ownership\");\n        owner = newOwner;\n\n        emit OwnerChanged(newOwner);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": { "enabled": false, "runs": 200 },
      "outputSelection": {
        "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"], "": ["ast"] }
      }
    }
  },
  "output": {
    "sources": {
      "contracts/OwnableContract.sol": {
        "ast": {
          "absolutePath": "contracts/OwnableContract.sol",
          "exportedSymbols": { "OwnableContract": [39] },
          "id": 40,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            { "id": 1, "literals": ["solidity", "^", "0.8", ".9"], "nodeType": "PragmaDirective", "src": "39:23:0" },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "OwnableContract",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 39,
              "linearizedBaseContracts": [39],
              "name": "OwnableContract",
              "nameLocation": "149:15:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "a2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf36",
                  "id": 5,
                  "name": "OwnerChanged",
                  "nameLocation": "177:12:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 5,
                        "src": "190:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 2,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "190:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "189:9:0"
                  },
                  "src": "171:28:0"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 7,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "220:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "205:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "205:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 15,
                    "nodeType": "Block",
                    "src": "246:35:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "256:5:0",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 11,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "264:3:0",
                              "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                            },
                            "id": 12,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "268:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "264:10:0",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "256:18:0",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 14,
                        "nodeType": "ExpressionStatement",
                        "src": "256:18:0"
                      }
                    ]
                  },
                  "id": 16,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": { "id": 8, "nodeType": "ParameterList", "parameters": [], "src": "243:2:0" },
                  "returnParameters": { "id": 9, "nodeType": "ParameterList", "parameters": [], "src": "246:0:0" },
                  "scope": 39,
                  "src": "232:49:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 37,
                    "nodeType": "Block",
                    "src": "341:146:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                              "id": 25,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 22,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "359:3:0",
                                  "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                                },
                                "id": 23,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "363:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "359:10:0",
                                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 24,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "373:5:0",
                                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                              },
                              "src": "359:19:0",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "hexValue": "4f6e6c79206f776e65722063616e207472616e73666572206f776e657273686970",
                              "id": 26,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "380:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37",
                                "typeString": "literal_string \"Only owner can transfer ownership\""
                              },
                              "value": "Only owner can transfer ownership"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37",
                                "typeString": "literal_string \"Only owner can transfer ownership\""
                              }
                            ],
                            "id": 21,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "351:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "351:65:0",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 28,
                        "nodeType": "ExpressionStatement",
                        "src": "351:65:0"
                      },
                      {
                        "expression": {
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 29,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "426:5:0",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 30,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "434:8:0",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "426:16:0",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 32,
                        "nodeType": "ExpressionStatement",
                        "src": "426:16:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 34,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "471:8:0",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                            "id": 33,
                            "name": "OwnerChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "458:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "458:22:0",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 36,
                        "nodeType": "EmitStatement",
                        "src": "453:27:0"
                      }
                    ]
                  },
                  "functionSelector": "f2fde38b",
                  "id": 38,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferOwnership",
                  "nameLocation": "296:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "322:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 38,
                        "src": "314:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 17,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "314:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "313:18:0"
                  },
                  "returnParameters": { "id": 20, "nodeType": "ParameterList", "parameters": [], "src": "341:0:0" },
                  "scope": 39,
                  "src": "287:200:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 40,
              "src": "140:349:0",
              "usedErrors": []
            }
          ],
          "src": "39:451:0"
        },
        "id": 0
      }
    },
    "contracts": {
      "contracts/OwnableContract.sol": {
        "OwnableContract": {
          "abi": [
            { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
            {
              "anonymous": false,
              "inputs": [{ "indexed": false, "internalType": "address", "name": "", "type": "address" }],
              "name": "OwnerChanged",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": { "@_16": { "entryPoint": null, "id": 16, "parameterSlots": 0, "returnSlots": 0 } },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610334806100606000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b610043610075565b60405161005091906101e2565b60405180910390f35b610073600480360381019061006e919061022e565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e906102de565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf368160405161019691906101e2565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101cc826101a1565b9050919050565b6101dc816101c1565b82525050565b60006020820190506101f760008301846101d3565b92915050565b600080fd5b61020b816101c1565b811461021657600080fd5b50565b60008135905061022881610202565b92915050565b600060208284031215610244576102436101fd565b5b600061025284828501610219565b91505092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e207472616e73666572206f776e657273686960008201527f7000000000000000000000000000000000000000000000000000000000000000602082015250565b60006102c860218361025b565b91506102d38261026c565b604082019050919050565b600060208201905081810360008301526102f7816102bb565b905091905056fea26469706673582212205d8373eed71a7f08fc7c14a890217d3e3b5c2d2fa783ef1af35382421df6dead64736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x334 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP1 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA2EA9883A321A3E97B8266C2B078BFEEC6D50C711ED71F874A90D500AE2EAF36 DUP2 PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC DUP3 PUSH2 0x1A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC DUP2 PUSH2 0x1C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20B DUP2 PUSH2 0x1C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228 DUP2 PUSH2 0x202 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244 JUMPI PUSH2 0x243 PUSH2 0x1FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x252 DUP5 DUP3 DUP6 ADD PUSH2 0x219 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E207472616E73666572206F776E6572736869 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8 PUSH1 0x21 DUP4 PUSH2 0x25B JUMP JUMPDEST SWAP2 POP PUSH2 0x2D3 DUP3 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F7 DUP2 PUSH2 0x2BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D DUP4 PUSH20 0xEED71A7F08FC7C14A890217D3E3B5C2D2FA783EF BYTE RETURN MSTORE8 DUP3 TIMESTAMP SAR 0xF6 0xDE 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
              "sourceMap": "140:349:0:-:0;;;232:49;;;;;;;;;;264:10;256:5;;:18;;;;;;;;;;;;;;;;;;140:349;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@owner_7": { "entryPoint": 117, "id": 7, "parameterSlots": 0, "returnSlots": 0 },
                "@transferOwnership_38": { "entryPoint": 153, "id": 38, "parameterSlots": 1, "returnSlots": 0 },
                "abi_decode_t_address": { "entryPoint": 537, "id": null, "parameterSlots": 2, "returnSlots": 1 },
                "abi_decode_tuple_t_address": { "entryPoint": 558, "id": null, "parameterSlots": 2, "returnSlots": 1 },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 467,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 699,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 482,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 734,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": { "entryPoint": null, "id": null, "parameterSlots": 0, "returnSlots": 1 },
                "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                  "entryPoint": 603,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_address": { "entryPoint": 449, "id": null, "parameterSlots": 1, "returnSlots": 1 },
                "cleanup_t_uint160": { "entryPoint": 417, "id": null, "parameterSlots": 1, "returnSlots": 1 },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 509,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "store_literal_in_memory_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37": {
                  "entryPoint": 620,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_address": { "entryPoint": 514, "id": null, "parameterSlots": 1, "returnSlots": 0 }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2723:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52:81:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "62:65:1",
                              "value": {
                                "arguments": [
                                  { "name": "value", "nodeType": "YulIdentifier", "src": "77:5:1" },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "84:42:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "73:3:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "73:54:1"
                              },
                              "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "62:7:1" }]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "34:5:1", "type": "" }],
                        "returnVariables": [
                          { "name": "cleaned", "nodeType": "YulTypedName", "src": "44:7:1", "type": "" }
                        ],
                        "src": "7:126:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "184:51:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "194:35:1",
                              "value": {
                                "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "223:5:1" }],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "205:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "205:24:1"
                              },
                              "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "194:7:1" }]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "166:5:1", "type": "" }],
                        "returnVariables": [
                          { "name": "cleaned", "nodeType": "YulTypedName", "src": "176:7:1", "type": "" }
                        ],
                        "src": "139:96:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "306:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  { "name": "pos", "nodeType": "YulIdentifier", "src": "323:3:1" },
                                  {
                                    "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "346:5:1" }],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:24:1"
                                  }
                                ],
                                "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "316:6:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "316:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "316:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "value", "nodeType": "YulTypedName", "src": "294:5:1", "type": "" },
                          { "name": "pos", "nodeType": "YulTypedName", "src": "301:3:1", "type": "" }
                        ],
                        "src": "241:118:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "463:124:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "473:26:1",
                              "value": {
                                "arguments": [
                                  { "name": "headStart", "nodeType": "YulIdentifier", "src": "485:9:1" },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "496:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "481:3:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "481:18:1"
                              },
                              "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "473:4:1" }]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  { "name": "value0", "nodeType": "YulIdentifier", "src": "553:6:1" },
                                  {
                                    "arguments": [
                                      { "name": "headStart", "nodeType": "YulIdentifier", "src": "566:9:1" },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "577:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "562:3:1" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "562:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "509:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "509:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "509:71:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "headStart", "nodeType": "YulTypedName", "src": "435:9:1", "type": "" },
                          { "name": "value0", "nodeType": "YulTypedName", "src": "447:6:1", "type": "" }
                        ],
                        "returnVariables": [
                          { "name": "tail", "nodeType": "YulTypedName", "src": "458:4:1", "type": "" }
                        ],
                        "src": "365:222:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "633:35:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "643:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "659:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "653:5:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "653:9:1"
                              },
                              "variableNames": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "643:6:1" }]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          { "name": "memPtr", "nodeType": "YulTypedName", "src": "626:6:1", "type": "" }
                        ],
                        "src": "593:75:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "763:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "780:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "783:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "773:6:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "773:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "773:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "674:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "886:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "903:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "906:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "896:6:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "896:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "896:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "797:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "963:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1020:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1029:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1032:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1022:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1022:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1022:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      { "name": "value", "nodeType": "YulIdentifier", "src": "986:5:1" },
                                      {
                                        "arguments": [
                                          { "name": "value", "nodeType": "YulIdentifier", "src": "1011:5:1" }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "993:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "993:24:1"
                                      }
                                    ],
                                    "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "983:2:1" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "983:35:1"
                                  }
                                ],
                                "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "976:6:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "976:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "973:63:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "956:5:1", "type": "" }],
                        "src": "920:122:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1100:87:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1110:29:1",
                              "value": {
                                "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "1132:6:1" }],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1119:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1119:20:1"
                              },
                              "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1110:5:1" }]
                            },
                            {
                              "expression": {
                                "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1175:5:1" }],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1148:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1148:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1148:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "offset", "nodeType": "YulTypedName", "src": "1078:6:1", "type": "" },
                          { "name": "end", "nodeType": "YulTypedName", "src": "1086:3:1", "type": "" }
                        ],
                        "returnVariables": [
                          { "name": "value", "nodeType": "YulTypedName", "src": "1094:5:1", "type": "" }
                        ],
                        "src": "1048:139:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1259:263:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1305:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1307:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1307:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1307:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "1280:7:1" },
                                      { "name": "headStart", "nodeType": "YulIdentifier", "src": "1289:9:1" }
                                    ],
                                    "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "1276:3:1" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1276:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1301:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "1272:3:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "1272:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1269:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1398:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1413:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1427:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    { "name": "offset", "nodeType": "YulTypedName", "src": "1417:6:1", "type": "" }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1442:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          { "name": "headStart", "nodeType": "YulIdentifier", "src": "1477:9:1" },
                                          { "name": "offset", "nodeType": "YulIdentifier", "src": "1488:6:1" }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1473:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1473:22:1"
                                      },
                                      { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "1497:7:1" }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1452:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1452:53:1"
                                  },
                                  "variableNames": [
                                    { "name": "value0", "nodeType": "YulIdentifier", "src": "1442:6:1" }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "headStart", "nodeType": "YulTypedName", "src": "1229:9:1", "type": "" },
                          { "name": "dataEnd", "nodeType": "YulTypedName", "src": "1240:7:1", "type": "" }
                        ],
                        "returnVariables": [
                          { "name": "value0", "nodeType": "YulTypedName", "src": "1252:6:1", "type": "" }
                        ],
                        "src": "1193:329:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1624:73:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  { "name": "pos", "nodeType": "YulIdentifier", "src": "1641:3:1" },
                                  { "name": "length", "nodeType": "YulIdentifier", "src": "1646:6:1" }
                                ],
                                "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1634:6:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "1634:19:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1634:19:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1662:29:1",
                              "value": {
                                "arguments": [
                                  { "name": "pos", "nodeType": "YulIdentifier", "src": "1681:3:1" },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1686:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1677:3:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "1677:14:1"
                              },
                              "variableNames": [
                                { "name": "updated_pos", "nodeType": "YulIdentifier", "src": "1662:11:1" }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "pos", "nodeType": "YulTypedName", "src": "1596:3:1", "type": "" },
                          { "name": "length", "nodeType": "YulTypedName", "src": "1601:6:1", "type": "" }
                        ],
                        "returnVariables": [
                          { "name": "updated_pos", "nodeType": "YulTypedName", "src": "1612:11:1", "type": "" }
                        ],
                        "src": "1528:169:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1809:114:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      { "name": "memPtr", "nodeType": "YulIdentifier", "src": "1831:6:1" },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1839:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1827:3:1" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1827:14:1"
                                  },
                                  {
                                    "hexValue": "4f6e6c79206f776e65722063616e207472616e73666572206f776e6572736869",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1843:34:1",
                                    "type": "",
                                    "value": "Only owner can transfer ownershi"
                                  }
                                ],
                                "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1820:6:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "1820:58:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1820:58:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      { "name": "memPtr", "nodeType": "YulIdentifier", "src": "1899:6:1" },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1907:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1895:3:1" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1895:15:1"
                                  },
                                  {
                                    "hexValue": "70",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1912:3:1",
                                    "type": "",
                                    "value": "p"
                                  }
                                ],
                                "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "1888:6:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "1888:28:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1888:28:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "1801:6:1", "type": "" }],
                        "src": "1703:220:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2075:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2085:74:1",
                              "value": {
                                "arguments": [
                                  { "name": "pos", "nodeType": "YulIdentifier", "src": "2151:3:1" },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2156:2:1",
                                    "type": "",
                                    "value": "33"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2092:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2092:67:1"
                              },
                              "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2085:3:1" }]
                            },
                            {
                              "expression": {
                                "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2257:3:1" }],
                                "functionName": {
                                  "name": "store_literal_in_memory_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37",
                                  "nodeType": "YulIdentifier",
                                  "src": "2168:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2168:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2168:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2270:19:1",
                              "value": {
                                "arguments": [
                                  { "name": "pos", "nodeType": "YulIdentifier", "src": "2281:3:1" },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2286:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2277:3:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "2277:12:1"
                              },
                              "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "2270:3:1" }]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "2063:3:1", "type": "" }],
                        "returnVariables": [
                          { "name": "end", "nodeType": "YulTypedName", "src": "2071:3:1", "type": "" }
                        ],
                        "src": "1929:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2472:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2482:26:1",
                              "value": {
                                "arguments": [
                                  { "name": "headStart", "nodeType": "YulIdentifier", "src": "2494:9:1" },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2505:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2490:3:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "2490:18:1"
                              },
                              "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "2482:4:1" }]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      { "name": "headStart", "nodeType": "YulIdentifier", "src": "2529:9:1" },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2540:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2525:3:1" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2525:17:1"
                                  },
                                  {
                                    "arguments": [
                                      { "name": "tail", "nodeType": "YulIdentifier", "src": "2548:4:1" },
                                      { "name": "headStart", "nodeType": "YulIdentifier", "src": "2554:9:1" }
                                    ],
                                    "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "2544:3:1" },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2544:20:1"
                                  }
                                ],
                                "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "2518:6:1" },
                                "nodeType": "YulFunctionCall",
                                "src": "2518:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2518:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2574:139:1",
                              "value": {
                                "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "2708:4:1" }],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2582:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2582:131:1"
                              },
                              "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "2574:4:1" }]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          { "name": "headStart", "nodeType": "YulTypedName", "src": "2452:9:1", "type": "" }
                        ],
                        "returnVariables": [
                          { "name": "tail", "nodeType": "YulTypedName", "src": "2467:4:1", "type": "" }
                        ],
                        "src": "2301:419:1"
                      }
                    ]
                  },
                  "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can transfer ownershi\")\n\n        mstore(add(memPtr, 32), \"p\")\n\n    }\n\n    function abi_encode_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_499f0dfc30493f13e7820b35848e7deb69fa3b2df2b17092bbfa92b25790ec37_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b610043610075565b60405161005091906101e2565b60405180910390f35b610073600480360381019061006e919061022e565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e906102de565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf368160405161019691906101e2565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101cc826101a1565b9050919050565b6101dc816101c1565b82525050565b60006020820190506101f760008301846101d3565b92915050565b600080fd5b61020b816101c1565b811461021657600080fd5b50565b60008135905061022881610202565b92915050565b600060208284031215610244576102436101fd565b5b600061025284828501610219565b91505092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e207472616e73666572206f776e657273686960008201527f7000000000000000000000000000000000000000000000000000000000000000602082015250565b60006102c860218361025b565b91506102d38261026c565b604082019050919050565b600060208201905081810360008301526102f7816102bb565b905091905056fea26469706673582212205d8373eed71a7f08fc7c14a890217d3e3b5c2d2fa783ef1af35382421df6dead64736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP1 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA2EA9883A321A3E97B8266C2B078BFEEC6D50C711ED71F874A90D500AE2EAF36 DUP2 PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC DUP3 PUSH2 0x1A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC DUP2 PUSH2 0x1C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20B DUP2 PUSH2 0x1C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228 DUP2 PUSH2 0x202 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244 JUMPI PUSH2 0x243 PUSH2 0x1FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x252 DUP5 DUP3 DUP6 ADD PUSH2 0x219 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E207472616E73666572206F776E6572736869 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8 PUSH1 0x21 DUP4 PUSH2 0x25B JUMP JUMPDEST SWAP2 POP PUSH2 0x2D3 DUP3 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F7 DUP2 PUSH2 0x2BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D DUP4 PUSH20 0xEED71A7F08FC7C14A890217D3E3B5C2D2FA783EF BYTE RETURN MSTORE8 DUP3 TIMESTAMP SAR 0xF6 0xDE 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
              "sourceMap": "140:349:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;205:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;287:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;205:20;;;;;;;;;;;;:::o;287:200::-;373:5;;;;;;;;;;359:19;;:10;:19;;;351:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;434:8;426:5;;:16;;;;;;;;;;;;;;;;;;458:22;471:8;458:22;;;;;;:::i;:::-;;;;;;;;287:200;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:220::-;1843:34;1839:1;1831:6;1827:14;1820:58;1912:3;1907:2;1899:6;1895:15;1888:28;1703:220;:::o;1929:366::-;2071:3;2092:67;2156:2;2151:3;2092:67;:::i;:::-;2085:74;;2168:93;2257:3;2168:93;:::i;:::-;2286:2;2281:3;2277:12;2270:19;;1929:366;;;:::o;2301:419::-;2467:4;2505:2;2494:9;2490:18;2482:26;;2554:9;2548:4;2544:20;2540:1;2529:9;2525:17;2518:47;2582:131;2708:4;2582:131;:::i;:::-;2574:139;;2301:419;;;:::o"
            },
            "methodIdentifiers": { "owner()": "8da5cb5b", "transferOwnership(address)": "f2fde38b" }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OwnableContract.sol\":\"OwnableContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OwnableContract.sol\":{\"keccak256\":\"0x3b63c3c5fa5753f6ce8e07634d33d8d518caecc8155d6cc560af7db183c417f9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e248995213027b955c9c9d4b20c1943b77d42cc4c7ff493df50fbee2986ae89\",\"dweb:/ipfs/QmeV9H5DGubeTGWFXGwbhMewNyH6TF4pFw58RKdAKgqUrD\"]}},\"version\":1}"
        }
      }
    }
  }
}
